name: Documentation

on:
  push:
    branches: [ main ]
    paths: 
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[docs]
        pip install mkdocs-git-revision-date-localized-plugin mkdocs-git-committers-plugin-2
      continue-on-error: false
    
    - name: Create docs structure if missing
      run: |
        mkdir -p docs
        if [ ! -f docs/index.md ]; then
          cat > docs/index.md << 'EOF'
        # Simplenote MCP Server Documentation
        
        Welcome to the Simplenote MCP Server documentation!
        
        ## Quick Start
        
        See the [README](../README.md) for installation and setup instructions.
        
        ## API Reference
        
        - [Server API](api/server.md)
        - [Cache System](api/cache.md)
        - [Search Engine](api/search.md)
        
        ## Development
        
        - [Contributing](../CONTRIBUTING.md)
        - [Changelog](../CHANGELOG.md)
        EOF
        fi
        
        if [ ! -f mkdocs.yml ]; then
          cat > mkdocs.yml << 'EOF'
        site_name: Simplenote MCP Server
        site_description: A lightweight MCP server for Simplenote integration
        site_url: https://docdyhr.github.io/simplenote-mcp-server/
        repo_url: https://github.com/docdyhr/simplenote-mcp-server
        repo_name: docdyhr/simplenote-mcp-server
        
        nav:
          - Home: index.md
          - Installation: installation.md
          - Configuration: configuration.md
          - Usage: usage.md
          - API Reference:
            - Server: api/server.md
            - Cache: api/cache.md
            - Search: api/search.md
          - Development:
            - Contributing: contributing.md
            - Changelog: changelog.md
        
        theme:
          name: material
          palette:
            - media: "(prefers-color-scheme: light)"
              scheme: default
              primary: blue
              accent: blue
              toggle:
                icon: material/brightness-7
                name: Switch to dark mode
            - media: "(prefers-color-scheme: dark)"
              scheme: slate
              primary: blue
              accent: blue
              toggle:
                icon: material/brightness-4
                name: Switch to light mode
          features:
            - navigation.tabs
            - navigation.sections
            - navigation.expand
            - navigation.top
            - search.suggest
            - search.highlight
            - content.code.copy
            - content.code.annotate
        
        plugins:
          - search
          - mkdocstrings:
              handlers:
                python:
                  paths: [.]
                  options:
                    docstring_style: google
                    show_source: true
                    show_root_heading: true
                    show_root_full_path: false
          - git-revision-date-localized:
              enable_creation_date: true
          - git-committers:
              repository: docdyhr/simplenote-mcp-server
              branch: main
        
        markdown_extensions:
          - admonition
          - pymdownx.details
          - pymdownx.superfences
          - pymdownx.highlight:
              anchor_linenums: true
          - pymdownx.inlinehilite
          - pymdownx.snippets
          - pymdownx.tabbed:
              alternate_style: true
          - tables
          - toc:
              permalink: true
        EOF
        fi
    
    - name: Generate API documentation
      run: |
        mkdir -p docs/api
        
        # Generate server API docs
        cat > docs/api/server.md << 'EOF'
        # Server API
        
        ::: simplenote_mcp.server.server
            options:
              show_source: true
              heading_level: 2
        EOF
        
        # Generate cache API docs
        cat > docs/api/cache.md << 'EOF'
        # Cache System
        
        ::: simplenote_mcp.cache.cache
            options:
              show_source: true
              heading_level: 2
        EOF
        
        # Generate search API docs
        cat > docs/api/search.md << 'EOF'
        # Search Engine
        
        ::: simplenote_mcp.search.advanced_search
            options:
              show_source: true
              heading_level: 2
        EOF
    
    - name: Copy documentation files
      run: |
        # Copy main documentation files to docs directory
        cp README.md docs/installation.md
        cp CHANGELOG.md docs/changelog.md
        
        if [ -f CONTRIBUTING.md ]; then
          cp CONTRIBUTING.md docs/contributing.md
        else
          echo "# Contributing\n\nSee the main repository for contribution guidelines." > docs/contributing.md
        fi
        
        # Create usage documentation
        cat > docs/usage.md << 'EOF'
        # Usage Guide
        
        ## Basic Usage
        
        After installation and configuration, the Simplenote MCP Server provides several tools and capabilities:
        
        ### Available Tools
        
        - `create_note`: Create a new note in Simplenote
        - `update_note`: Update an existing note
        - `delete_note`: Delete a note
        - `get_note`: Retrieve a specific note
        - `search_notes`: Search through your notes
        
        ### Resources
        
        The server exposes your Simplenote notes as MCP resources that can be accessed by Claude Desktop.
        
        ### Advanced Search
        
        The search functionality supports:
        - Boolean operators (AND, OR, NOT)
        - Phrase matching with quotes
        - Tag filtering
        - Date range filtering
        
        For detailed examples, see the main README.
        EOF
        
        # Create configuration documentation
        cat > docs/configuration.md << 'EOF'
        # Configuration
        
        ## Environment Variables
        
        The Simplenote MCP Server requires the following environment variables:
        
        - `SIMPLENOTE_EMAIL`: Your Simplenote email address
        - `SIMPLENOTE_PASSWORD`: Your Simplenote password
        - `LOG_LEVEL`: (Optional) Logging level (DEBUG, INFO, WARNING, ERROR)
        
        ## Claude Desktop Integration
        
        Add the server to your Claude Desktop configuration file:
        
        ```json
        {
          "mcpServers": {
            "simplenote": {
              "command": "simplenote-mcp-server",
              "env": {
                "SIMPLENOTE_EMAIL": "your-email@example.com",
                "SIMPLENOTE_PASSWORD": "your-password"
              }
            }
          }
        }
        ```
        
        For detailed setup instructions, see the installation guide.
        EOF
    
    - name: Build documentation
      run: mkdocs build --strict
    
    - name: Upload documentation artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./site

  deploy-docs:
    name: Deploy Documentation
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build-docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  link-check:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    needs: build-docs
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download documentation artifacts
      uses: actions/download-artifact@v4
      with:
        name: github-pages
        path: ./site
    
    - name: Extract site
      run: |
        cd site
        tar -xf artifact.tar
    
    - name: Check links
      uses: lycheeverse/lychee-action@v1
      with:
        args: --verbose --no-progress './site/**/*.html'
        fail: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}