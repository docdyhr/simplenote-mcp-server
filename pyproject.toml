[project]
name = "simplenote-mcp-server"
version = "1.4.0"
description = "A simple MCP Server that connects to Simplenote"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [{ name = "Thomas Juul Dyhr", email = "docdyhr@me.com" }]
dependencies = ["mcp[cli]>=0.4.0", "simplenote>=2.1.4"]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "black>=23.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]
all = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "black>=23.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.scripts]
simplenote-mcp-server = "simplenote_mcp.server:run_main"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
# Enhanced rule set that includes:
# E, F: Error/Style (flake8)
# W: Warnings
# I: isort
# B: flake8-bugbear
# C4: flake8-comprehensions
# ARG: flake8-unused-arguments
# SIM: flake8-simplify
# S: flake8-bandit (security)
# ANN: flake8-annotations (type hints)
# UP: pyupgrade
# N: pep8-naming
# D: pydocstyle
select = ["E", "F", "W", "I", "B", "C4", "ARG", "SIM", "S", "ANN", "UP", "N", "D"]
ignore = [
    "E203",    # Whitespace before ':' (conflicts with Black)
    "E501",    # Line too long (handled by formatter)
    "ANN401",  # Dynamically typed expressions (Any) are disallowed
    "D203",    # 1 blank line required before class docstring
    "D212",    # Multi-line docstring summary should start at the first line
    "D107",    # Missing docstring in __init__
    "S101",    # Use of assert detected (allow in tests)
    "S108",    # Probable insecure usage of temporary file (needed for PID files)
    "S603",    # Subprocess call: check for execution of untrusted input (needed for launching)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "D104"]  # Allow unused imports and missing docstrings in __init__.py
"tests/*" = ["ARG001", "ARG002", "S101", "ANN", "D"]  # Relax rules for test files
"simplenote_mcp/tests/*" = ["ARG001", "ARG002", "S101", "ANN", "D", "E402"]  # Allow import issues in tests
"**/conftest.py" = ["D", "ANN"]  # Allow missing docstrings and annotations in conftest

[tool.ruff.lint.isort]
known-first-party = ["simplenote_mcp"]

[tool.ruff.lint.pydocstyle]
convention = "google"
