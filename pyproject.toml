[project]
name = "simplenote-mcp-server"
version = "1.5.0"
description = "A simple MCP Server that connects to Simplenote"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Thomas Juul Dyhr", email = "docdyhr@me.com" }]
dependencies = ["mcp[cli]>=0.4.0", "simplenote>=2.1.4"]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "black>=23.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
monitoring = [
    "psutil>=5.9.0",
]
all = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "black>=23.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "psutil>=5.9.0",
]

[project.scripts]
simplenote-mcp-server = "simplenote_mcp.server:run_main"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
# Enhanced rule set that includes:
# E, F: Error/Style (flake8)
# W: Warnings
# I: isort
# B: flake8-bugbear
# C4: flake8-comprehensions
# ARG: flake8-unused-arguments
# SIM: flake8-simplify
# S: flake8-bandit (security)
# ANN: flake8-annotations (type hints)
# UP: pyupgrade
# N: pep8-naming
# D: pydocstyle
select = ["E", "F", "W", "I", "B", "C4", "SIM", "UP"]
ignore = [
    "E203",    # Whitespace before ':' (conflicts with Black)
    "E501",    # Line too long (handled by formatter)
    "E402",    # Module level import not at top of file (needed for dynamic imports)
    "SIM105",  # Use contextlib.suppress (sometimes try/except is clearer)
    "SIM102",  # Use single if-statement (sometimes nested is clearer)
    "SIM103",  # Return condition directly (sometimes explicit is clearer)
    "SIM212",  # Simplify conditionals (sometimes explicit is clearer)
    "UP035",   # typing.Type deprecation (compatibility with older Python)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/*" = ["S101"]  # Allow assert in test files
"simplenote_mcp/tests/*" = ["S101", "E402"]  # Allow assert and import issues in tests
"**/conftest.py" = ["F401"]  # Allow unused imports in conftest
"scripts/*" = ["SIM", "S"]  # Relax simplify and security rules for scripts
"simplenote_mcp/scripts/*" = ["SIM", "S"]  # Relax rules for internal scripts
"stubs/*" = ["ALL"]  # Ignore all rules in type stubs
"test_workflows_locally.py" = ["S602"]  # Allow shell=True in local test script

[tool.ruff.lint.isort]
known-first-party = ["simplenote_mcp"]

[tool.ruff.lint.pydocstyle]
convention = "google"
